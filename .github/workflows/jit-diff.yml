name: JIT Diffs

on:
  workflow_dispatch:
    inputs:
      baseUser:
        description: Base user/org
        required: true
        default: dotnet
      baseBranch:
        description: Base branch
        required: true
        default: main
      diffUser:
        description: Diff user/org
        required: true
        default: am11
      diffBranch:
        description: Diff branch
        required: true
        default: main
      diffCloneName:
        description: Diff clone name
        required: true
        default: runtime
      uploadArtifacts:
        description: "Upload artifacts (yes: 1, no: 0)"
        required: true
        default: 0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt install -y liblttng-ust-dev libkrb5-dev libssl-dev libicu-dev g++ llvm-dev clang

          wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb

          sudo apt update
          sudo apt install -y dotnet-sdk-6.0 dotnet-runtime-6.0 dotnet-sdk-7.0
          dotnet --info

      - name: Cleanup
        run: |
            echo "Before cleanup:"
            df -h
            sudo rm -rf "/usr/local/share/boost" "$AGENT_TOOLSDIRECTORY"
            sudo apt clean
            echo "After cleanup:"
            df -h

      - name: Checkout runtime repos
        run: |
          BASE_USER=${{ github.event.inputs.baseUser }}
          BASE_BRANCH=${{ github.event.inputs.baseBranch }}
          DIFF_USER=${{ github.event.inputs.diffUser }}
          DIFF_BRANCH=${{ github.event.inputs.diffBranch }}
          DIFF_CLONE_NAME=${{ github.event.inputs.diffCloneName }}

          git clone https://github.com/${BASE_USER:-dotnet}/runtime runtime-base
          git clone https://github.com/${DIFF_USER:-dotnet}/${DIFF_CLONE_NAME:-runtime} runtime-diff

          git -C runtime-diff checkout $DIFF_BRANCH
          git -C runtime-diff remote add $BASE_USER https://github.com/$BASE_USER/runtime
          git -C runtime-diff fetch --all

          NEAREST_PARENT="$(git -C runtime-diff merge-base HEAD $BASE_USER/$BASE_BRANCH)"
          git -C runtime-base checkout $NEAREST_PARENT

      - name: Build runtime-base
        run: |
          $(pwd)/runtime-base/build.sh Clr+Libs -c Release
          $(pwd)/runtime-base/build.sh Clr -c Checked
          $(pwd)/runtime-base/src/tests/build.sh Checked generatelayoutonly
          $(pwd)/runtime-base/src/tests/build.sh Release generatelayoutonly

      - name: Cleanup
        run: |
            echo "Before cleanup:"
            df -h
            sudo rm -rf $(pwd)/runtime-base/artifacts/obj
            echo "After cleanup:"
            df -h

      - name: Build runtime-diff
        run: |
          $(pwd)/runtime-diff/build.sh Clr+Libs -c Release
          $(pwd)/runtime-diff/build.sh Clr -c Checked
          $(pwd)/runtime-diff/src/tests/build.sh Checked generatelayoutonly
          $(pwd)/runtime-diff/src/tests/build.sh Release generatelayoutonly

      - name: Cleanup
        run: |
            echo "Before cleanup:"
            df -h
            sudo rm -rf $(pwd)/runtime-diff/artifacts/obj
            echo "After cleanup:"
            df -h

      - name: Build jitutils
        run: |
          git clone https://github.com/dotnet/jitutils
          cd jitutils
          $(pwd)/bootstrap.sh
          $(pwd)/build.sh -c Release
          cd ..

      - name: Collect and analyze jit-diffs (crossgen + framework)
        run: |
          export PATH=$PATH:$(pwd)/jitutils/bin

          mkdir -p /tmp/jit-diffs/crossgen2

          jit-diff diff --output /tmp/jit-diffs/crossgen2 \
            --base $(pwd)/runtime-base/artifacts/bin/coreclr/Linux.x64.Checked \
            --core_root $(pwd)/runtime-base/artifacts/tests/coreclr/Linux.x64.Release/Tests/Core_Root \
            --crossgen $(pwd)/runtime-base/artifacts/tests/coreclr/Linux.x64.Release/Tests/Core_Root/crossgen2/crossgen2 \
            --frameworks || true

          jit-diff diff --output /tmp/jit-diffs/crossgen2 \
            --diff $(pwd)/runtime-diff/artifacts/bin/coreclr/Linux.x64.Checked \
            --core_root $(pwd)/runtime-diff/artifacts/tests/coreclr/Linux.x64.Release/Tests/Core_Root \
            --crossgen $(pwd)/runtime-diff/artifacts/tests/coreclr/Linux.x64.Release/Tests/Core_Root/crossgen2/crossgen2 \
            --frameworks || true

          jit-analyze -b /tmp/jit-diffs/crossgen2/dasmset_1/base -d /tmp/jit-diffs/crossgen2/dasmset_2/diff -r -c 100 || true

      - name: Collect and analyze jit-diffs (pmi + framework)
        run: |
          export PATH=$PATH:$(pwd)/jitutils/bin

          mkdir -p /tmp/jit-diffs/pmi

          jit-diff diff --output /tmp/jit-diffs/pmi \
            --base $(pwd)/runtime-base/artifacts/bin/coreclr/Linux.x64.Checked \
            --base_root runtime-base \
            --core_root $(pwd)/runtime-base/artifacts/tests/coreclr/Linux.x64.Release/Tests/Core_Root \
            --pmi --frameworks || true

          jit-diff diff --output /tmp/jit-diffs/pmi \
            --diff $(pwd)/runtime-diff/artifacts/bin/coreclr/Linux.x64.Checked \
            --diff_root runtime-diff \
            --core_root $(pwd)/runtime-diff/artifacts/tests/coreclr/Linux.x64.Release/Tests/Core_Root \
            --pmi --frameworks || true

          jit-analyze -b /tmp/jit-diffs/pmi/dasmset_1/base -d /tmp/jit-diffs/pmi/dasmset_2/diff -r -c 100 || true

      # runs when uploadArtifacts value is 1 (true) set from UI, with on-demand run
      - name: Upload artifacts
        if: ${{ github.event.inputs.uploadArtifacts == '1' }}
        run: |
          # hub(1) requires release to be created inside a git repo
          git clone https://${{ secrets.CLONE_TOKEN }}:x-oauth-basic@github.com/${{ github.repository }}.git repo
          cd repo

          tar czf jit-diffs.tar.gz -C /tmp jit-diffs
          artifacts="-a ./jit-diffs.tar.gz"
          tag_name="jit-diffs_$GITHUB_RUN_ID"
          hub release create $artifacts -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
